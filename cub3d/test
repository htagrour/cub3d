#include "cub3d.h"
void draw_somthing(t_window *window)
{
    int coun_h;
    int count_w;
    int color;

    if (key == A)
        color = (int)0xFF0000;
    else
        color = (int)0xFFFFFF;
    coun_h = -1;
    while (++coun_h < WIN_HIGHET)
    {
        count_w = -1;
        while (++count_w < WIN_WIDTH)
        {
            if (count_w % 2)
                window->img_data[coun_h * WIN_WIDTH + count_w] = color;
            else
                window->img_data[coun_h * WIN_WIDTH + count_w] = 0;
        }
        
    }
    mlx_put_image_to_window(window->mlx_ptr, window->win_ptr, window->img_ptr, 0, 0);
}
int keyp(int key, t_window *window)
{

}
int update1(int key,t_window *window)
{   

    
    return (0);
}
int main()
{
    t_window window;
    //init_var(&window);
    window.mlx_ptr = mlx_init();
    window.win_ptr = mlx_new_window( window.mlx_ptr, WIN_WIDTH, WIN_HIGHET, "CUB3D");
    window.img_ptr = mlx_new_image(window.mlx_ptr, WIN_WIDTH, WIN_HIGHET);
    window.img_data = (int*)mlx_get_data_addr(window.img_ptr, &window.bpp, &window.size_line, &window.endian);
    mlx_loop_hook(window.win_ptr,update1, &window);
    mlx_loop(window.mlx_ptr);
    return (0);
}